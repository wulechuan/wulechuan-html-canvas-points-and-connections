{"version":3,"sources":["sample-1/index.js"],"names":["buildWhatWeWant","window","wulechuanCanvasPointsAndConnections","draw","shoudSlowDownForTesting","drawnFramesCount","controller","drawFrame","Date","getTime","requestAnimationFrame","frameRate","particleCounts","canvas","document","querySelector","func","setTimeout","maxDistanceToMakeConnection","lineWidthDrawingThreshold","pointsCount","thickestLineWidth","pointColorRGB","lineColorRGB","speedMin","speedMax","addEventListener","updateCanvasPositionAndSize"],"mappings":"CAAA,SAAWA,GACVA,EAAgBC,OAAOC,sCACrB,SAAyBA,GAiB3B,SAASC,IACJC,GAA2BC,EAAiB,IAGhDC,EAAWC,WAAU,IAAIC,MAAOC,UAAY,KAC5CC,EAAsBP,GACtBE,KAtBD,IAAID,GAA0B,EAC1BO,EAAY,GACZC,EAAiB,GACjBR,IACHO,EAAY,EACZC,EAAiB,GAUlB,IAAIP,EAAmB,EAYnBQ,EAASC,SAASC,cAAc,gBAChCL,EAAwB,SAAUM,GACrCf,OAAOgB,WAAWD,EAAM,IAAOL,IAK5BL,EAAa,IAAIJ,GACpBW,OAAQA,EACRK,4BAA6B,GAC7BC,0BAA2B,IAC3BC,YAAaR,EACbS,kBAAmB,EACnBC,cAAe,aACfC,aAAc,cACdC,SAAU,EACVC,SAAU,KA4CXxB,OAAOyB,iBAAiB,SAAU,WACjCpB,EAAWqB,gCAGZxB","file":"index.min.js","sourcesContent":["(function (buildWhatWeWant) {\n\tbuildWhatWeWant(window.wulechuanCanvasPointsAndConnections);\n})(function buildWhatWeWant(wulechuanCanvasPointsAndConnections) {\n\tvar shoudSlowDownForTesting = false;\n\tvar frameRate = 30;\n\tvar particleCounts = 60;\n\tif (shoudSlowDownForTesting) {\n\t\tframeRate = 1;\n\t\tparticleCounts = 2; // must greater than 1, otherwise no connection is needed.\n\t}\n\n\n\n\n\n\n\n\n\tvar drawnFramesCount = 0;\n\tfunction draw() {\n\t\tif (shoudSlowDownForTesting && drawnFramesCount>2) {\n\t\t\treturn;\n\t\t}\n\t\tcontroller.drawFrame(new Date().getTime() / 1000);\n\t\trequestAnimationFrame(draw);\n\t\tdrawnFramesCount++;\n\t}\n\n\n\n\tvar canvas = document.querySelector('#test-canvas');\n\tvar requestAnimationFrame = function (func) {\n\t\twindow.setTimeout(func, 1000 / frameRate);\n\t};\n\n\n\n\tvar controller = new wulechuanCanvasPointsAndConnections({\n\t\tcanvas: canvas,\n\t\tmaxDistanceToMakeConnection: 60,\n\t\tlineWidthDrawingThreshold: 0.25,\n\t\tpointsCount: particleCounts,\n\t\tthickestLineWidth: 1,\n\t\tpointColorRGB: '0, 64, 190',\n\t\tlineColorRGB: '0, 128, 160',\n\t\tspeedMin: 6,\n\t\tspeedMax: 50,\n\t\t// generateOnePoint: generateOnePointAroundACircle,\n\t\t// updateOnePointOnIteration: updateOnePointOnIteration\n\t});\n\n\tfunction generateOnePointAroundACircle(point) {\n\t\tvar cw = canvas.width;\n\t\tvar ch = canvas.height;\n\t\tvar centerX = cw / 2;\n\t\tvar centerY = ch / 2;\n\t\tvar distributionRadius = Math.min(centerX, centerY) * 0.6;\n\n\t\tvar r = (Math.random() * 0.6 + 0.7 ) * distributionRadius;\n\t\tvar theta = Math.random() * Math.PI * 2;\n\n\t\tpoint.x = r * Math.sin(theta) + centerX;\n\t\tpoint.y = r * Math.cos(theta) + centerY;\n\t\tpoint.coreX = point.x;\n\t\tpoint.coreY = point.y;\n\t}\n\n\tfunction updateOnePointOnIteration(point, vmin, vmax) {\n\t\tvar vx, vy;\n\n\t\tif (!point.hasOwnProperty('vx')) {\n\t\t\tvx = Math.random() * (vmax - vmin) + vmin;\n\t\t\tvy = Math.random() * (vmax - vmin) + vmin;\n\t\t\tpoint.forceRatioOverDistanceX = 1200 * Math.random() + 1200;\n\t\t\tpoint.forceRatioOverDistanceY = 1200 * Math.random() + 1200;\n\t\t} else {\n\t\t\tvar distToCoreX = point.coreX - point.x;\n\t\t\tvar distToCoreY = point.coreY - point.y;\n\t\t\tvar forceX = distToCoreX * Math.abs(distToCoreX) / point.forceRatioOverDistanceX;\n\t\t\tvar forceY = distToCoreY * Math.abs(distToCoreY) / point.forceRatioOverDistanceY;\n\t\t\tvx = point.vx + forceX;\n\t\t\tvy = point.vy + forceY;\n\t\t}\n\n\t\tpoint.vx = vx;\n\t\tpoint.vy = vy;\n\t\t// point.speed = Math.sqrt(vx * vx + vy * vy);\n\t\t// point.direction = Math.atan2(vy, vx);\n\t}\n\n\twindow.addEventListener('resize', function () {\n\t\tcontroller.updateCanvasPositionAndSize();\n\t});\n\n\tdraw();\n});\n"]}